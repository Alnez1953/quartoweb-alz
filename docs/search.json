[
  {
    "objectID": "images.html",
    "href": "images.html",
    "title": "Photography",
    "section": "",
    "text": "Animals\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFlora\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMoon\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOldies\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLine_Curve Shinanigans\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMexico\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMacro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlack and White\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJapan\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUtah/Idaho\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStreet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/Shoppers/index.html",
    "href": "projects/Shoppers/index.html",
    "title": "Shoppers",
    "section": "",
    "text": "Analyzing…\n\n#Sample of dataframe\nhead(shopping_behavior)\n\n# A tibble: 6 × 18\n  `Customer ID`   Age Gender `Item Purchased` Category `Purchase Amount (USD)`\n          &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;            &lt;chr&gt;                      &lt;dbl&gt;\n1             1    55 Male   Blouse           Clothing                      53\n2             2    19 Male   Sweater          Clothing                      64\n3             3    50 Male   Jeans            Clothing                      73\n4             4    21 Male   Sandals          Footwear                      90\n5             5    45 Male   Blouse           Clothing                      49\n6             6    46 Male   Sneakers         Footwear                      20\n# ℹ 12 more variables: Location &lt;chr&gt;, Size &lt;chr&gt;, Color &lt;chr&gt;, Season &lt;chr&gt;,\n#   `Review Rating` &lt;dbl&gt;, `Subscription Status` &lt;chr&gt;, `Shipping Type` &lt;chr&gt;,\n#   `Discount Applied` &lt;chr&gt;, `Promo Code Used` &lt;chr&gt;,\n#   `Previous Purchases` &lt;dbl&gt;, `Payment Method` &lt;chr&gt;,\n#   `Frequency of Purchases` &lt;chr&gt;\n\n#Organizing the data to above average customers \nAbove_AVG_PrevPurchases &lt;- shopping_behavior %&gt;% group_by(Gender) %&gt;% filter(`Previous Purchases` &gt; mean(shopping_behavior$`Previous Purchases`)) \n\nggplot(Above_AVG_PrevPurchases, aes(x=Location, fill=Gender)) + geom_bar(position = \"dodge\")  +\n  geom_text(aes(label = after_stat(count)), stat = \"count\", vjust = 1.5, hjust = -.2, color = \"Black\", size= 3.2) +\n  #Aesthetics and graph details.\n  theme(\n  panel.background = element_rect(fill = \"white\",\n                                color = \"white\",\n                                size = 0.25, linetype = 'solid'),\n  panel.grid.major = element_line(size = 0.25, linetype = 'solid',\n                                color = \"black\"), \n  panel.grid.minor = element_line(size = 0.25, linetype = 'solid',\n                                color = \"black\"),\n  plot.background = element_rect(fill = \"gray\"),\n  axis.text.x = element_text(face = \"bold\", color = \"black\", \n                             size=9, angle = 45,hjust=1),\n  axis.text.y = element_text(face = \"bold\", color = \"black\", size=9, \n                             hjust=1), plot.title = \n  element_text(color = \"black\", size = 18, face = \"bold\", hjust = 0.5)) + \n  labs(title = \"Frequent Spenders by Location\", x = \"Location\", y = \"Frequency\")\n\n\n\n\n\n\n\n# Note that if you data is categorical\n# you can show the count for each group with ..count..\nggplot(Above_AVG_PrevPurchases, aes(x = Category)) +\n  geom_bar() +\n  geom_text(aes(label = after_stat(count)), stat = \"count\", vjust = 2, hjust = .5, color = \"white\", size = 10) + \n  #Aesthetics and graph details.\n  theme(\n  panel.background = element_rect(fill = \"white\",\n                                color = \"white\",\n                                size = 0.25, linetype = 'solid'),\n  panel.grid.major = element_line(size = 0.25, linetype = 'dashed',\n                                color = \"black\"), \n  panel.grid.minor = element_line(size = 0.25, linetype = 'blank',\n                                color = \"black\"),\n  plot.background = element_rect(fill = \"gray\"),\n  axis.text.x = element_text(face = \"bold\", color = \"black\", size=9),\n  axis.text.y = element_text(face = \"bold\", color = \"black\",size=9), \n                plot.title = element_text(color = \"black\", size = 18,\n                face = \"bold\", hjust = 0.5)) + \n  labs(title = \"Category of Items\", x = \"Category\", y = \"Frequency\")\n\n\n\n\n\n\n\n\n\nAbove_AVG_PrevPurchases %&gt;% ggplot(aes(x=`Item Purchased`,y=`Previous Purchases`, fill=`Review Rating`)) + geom_col(position = \"dodge2\") +\n  scale_y_continuous(limits=c(0, 50), breaks = c(0,10,20,30,40,50)) +\n  #Aesthetics and graph details.\n  theme(\n  panel.background = element_rect(fill = \"white\",\n                                color = \"white\",\n                                size = 0.25, linetype = 'solid'),\n  panel.grid.major = element_line(size = 0.25, linetype = 'solid',\n                                color = \"black\"), \n  panel.grid.minor = element_line(size = 0.25, linetype = 'solid',\n                                color = \"black\"),\n  plot.background = element_rect(fill = \"gray\"),\n  axis.text.x = element_text(face = \"bold\", color = \"black\", \n                             size=9, angle = 45,hjust=1),\n  axis.text.y = element_text(face = \"bold\", color = \"black\", size=9, \n                             hjust=1), plot.title = \n  element_text(color = \"black\", size = 18, face = \"bold\", hjust = 0.5)) + \n  labs(title = \"Frequent Purchases\", x = \"Item Purchased\", y = \"Previous Purchases\")"
  },
  {
    "objectID": "projects/Anime/index.html",
    "href": "projects/Anime/index.html",
    "title": "Dat Anime Set",
    "section": "",
    "text": "Analyzing…"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Generally I plan to use this site to practice, it doesn’t have too much purpose other than that at the moment. I’m working on several time consuming personal projects, there seems to never be enough time for everything in a single day."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "To be a Stranger",
    "section": "",
    "text": "To be weird, strange; unknown to the masses, unrecognizable to most individuals, could actually be a pretty good place to be. —You won’t have many chances to fail in the eyes of those you admire, and you’ll feel security with a small familiar surrounding. —The downside is, that you’ll never truly meet many people who could have made a difference, all because neither of you took the first step closer.\nMost people have yet to sonder. Realize that everyone else has a life as vivid and complex as their own. So they become uninterested or unmotivated in getting to know an uncommon sight. —We wonder about the thoughts of people we do not know, we weigh differences without waiting or watching, ask what we truly want? —We are strange we sit on the sidelines simply pondering but not seeing ahead. Who isn’t uncommon nowadays?\nWhen we were babies the world was painted, filled with color, as we grew, we were taught to paint a silhouette to all we didn’t know, to all we didn’t trust, this went on until we became a reflection of our own shadows, lost within our now black canvas, so from there we started a new. We didn’t know who we were, we were strangers to ourselves, we didn’t try to define, we usually left it for someone else to decide. We’ve since learned and have become someone we are proud to be, we look in the mirror and see the truth of our beings, now that we’re free. Look to everyone around, past pains have always been our common ground! Reach out to another and you will see that strangers are worth it, just like you and me.\n\n\n\n\nDifferent Links\n\n\n\n\n\nName\nDescription\nLink\n\n\nJapanese Hiragana/Kanji\nVocab and practice phrases I formatted in a way to help me study.\nHiragana / Kanji\n\n\nJapanese Katakana\nVocab I formatted in a way to help me study.\nKatakana"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Dat Anime Set\n\n\n\nGenre\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExploratory: Best Video Game\n\n\n\nWork in Progress\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShoppers\n\n\n\nWork in Progress\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/VidGame/index.html",
    "href": "projects/VidGame/index.html",
    "title": "Exploratory: Best Video Game",
    "section": "",
    "text": "dataVG &lt;- read_csv(\"vgsales.csv\")\ndataPlatformFreq &lt;- dataVG %&gt;% \n  select(Name, Platform, Genre)\n\ndataPlatformFreq &lt;- transform(dataPlatformFreq,\"Platform_Frequency\" = \n                        ave(seq(nrow(dataVG)), Platform, FUN = length)) %&gt;% \n                        group_by(Platform)\n\n\ngetmode &lt;- function(v) {\n   uniqv &lt;- unique(v)\n   uniqv[which.max(tabulate(match(v, uniqv)))]\n}\n\ndata.frame(summarise(dataPlatformFreq, \"--Frequency\" = getmode(Platform_Frequency)))\n\n   Platform X..Frequency\n1      2600          133\n2       3DO            3\n3       3DS          509\n4        DC           52\n5        DS         2163\n6        GB           98\n7       GBA          822\n8        GC          556\n9       GEN           27\n10       GG            1\n11      N64          319\n12      NES           98\n13       NG           12\n14       PC          960\n15     PCFX            1\n16       PS         1196\n17      PS2         2161\n18      PS3         1329\n19      PS4          336\n20      PSP         1213\n21      PSV          413\n22      SAT          173\n23      SCD            6\n24     SNES          239\n25     TG16            2\n26       WS            6\n27      Wii         1325\n28     WiiU          143\n29     X360         1265\n30       XB          824\n31     XOne          213\n\n\n\nAbove_dataPlatformFreq &lt;- subset(dataPlatformFreq, subset = dataPlatformFreq$Platform_Frequency &gt;= 250)\n\n#graph created by comparing the values in both columns on the given dataset\nggplot(Above_dataPlatformFreq, aes(x = Platform, color = Genre)) +\n         geom_bar() +\n  scale_y_continuous() +\n  #Aesthetics and graph details.\n  theme(\n  panel.background = element_rect(fill = \"black\",\n                                color = \"yellow\",\n                                size = 0.25, linetype = 'solid'),\n  panel.grid.major = element_line(size = 0.25, linetype = 'solid',\n                                color = \"blue\"), \n  panel.grid.minor = element_line(size = 0.25, linetype = 'solid',\n                                color = \"yellow\"),\n  plot.background = element_rect(fill = \"black\", color = \"yellow\"),\n  axis.text.x = element_text(face = \"bold\", color = \"red\", \n                             size=9, angle = 45,hjust=1),\n  axis.text.y = element_text(face = \"bold\", color = \"white\", size=9, \n                             hjust=1), plot.title = \n  element_text(color = \"blue\", size = 18, face = \"bold\", hjust = 0.5)) + \n  labs(title = \"Console Frequency\")\n\n\n\n\n\n\n\n\n\nBelow_dataPlatformFreq &lt;- subset(dataPlatformFreq, subset = dataPlatformFreq$Platform_Frequency &lt;= 250)\n\n#graph created by comparing the values in both columns on the given dataset\nggplot(Below_dataPlatformFreq, aes(x = Platform, color = Genre)) +\n         geom_bar() +\n  scale_y_continuous() +\n  #Aesthetics and graph details.\n  theme(\n  panel.background = element_rect(fill = \"black\",\n                                color = \"yellow\",\n                                size = 0.25, linetype = 'solid'),\n  panel.grid.major = element_line(size = 0.25, linetype = 'solid',\n                                color = \"blue\"), \n  panel.grid.minor = element_line(size = 0.25, linetype = 'solid',\n                                color = \"yellow\"),\n  plot.background = element_rect(fill = \"black\", color = \"yellow\"),\n  axis.text.x = element_text(face = \"bold\", color = \"red\", \n                             size=9, angle = 45,hjust=1),\n  axis.text.y = element_text(face = \"bold\", color = \"white\", size=9, \n                             hjust=1), plot.title = \n  element_text(color = \"blue\", size = 18, face = \"bold\", hjust = 0.5)) + \n  labs(title = \"Console Frequency\")\n\n\n\n\n\n\n\n\n\n#graph created by comparing the values in both columns on the given dataset\nggplot(dataVG, aes(x = Genre)) +\n         geom_bar() + \n  scale_y_continuous() +\n  geom_text(aes(label = after_stat(count)), stat = \"count\", vjust = 1.5, hjust = .5, color = \"yellow\", size= 3.2) +\n  #Aesthetics and graph details.\n  theme( \n  panel.background = element_rect(fill = \"black\",\n                                color = \"yellow\",\n                                size = 0.25, linetype = 'solid'), \n  panel.grid.major = element_line(size = 0.25, linetype = 'solid',\n                                color = \"blue\"), \n  panel.grid.minor = element_line(size = 0.25, linetype = 'solid',\n                                color = \"yellow\"),\n  plot.background = element_rect(fill = \"black\", color = \"yellow\"),\n  axis.text.x = element_text(face = \"bold\", color = \"red\", \n                             size=9, angle = 45,hjust=1),\n  axis.text.y = element_text(face = \"bold\", color = \"white\", size=9, \n                             hjust=1), plot.title = \n  element_text(color = \"blue\", size = 18, face = \"bold\", hjust = 0.5)) + \n  labs(title = \"Genre Frequency\")"
  }
]